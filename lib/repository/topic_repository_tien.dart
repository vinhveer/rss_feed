import 'package:supabase_flutter/supabase_flutter.dart';

/// Model auto-generated
// Generated by row_row_row tool
// Auto-generated file. Do not modify.
class TopicRow {
  static const field = (topicId: 'topic_id', topicName: 'topic_name');

  final int topicId;
  final dynamic topicName;

  const TopicRow({required this.topicId, required this.topicName});

  factory TopicRow.fromJson(Map<String, dynamic> json) {
    return TopicRow(
      topicId: (json[field.topicId] as num).toInt(),
      topicName: json[field.topicName],
    );
  }

  Map<String, dynamic> toJson() {
    return {field.topicId: topicId, field.topicName: topicName};
  }
}


/// Repository quản lý topic
class TopicRepository {
  final SupabaseClient supabase;

  TopicRepository(this.supabase);

  /// Lấy danh sách chủ đề (có phân trang và tìm kiếm)
  Future<List<TopicRow>> getTopics({
    int offset = 0,
    int limit = 20,
    String? search,
  }) async {
    List<TopicRow> results = [];

    if (search != null && search.isNotEmpty) {
      final data = await supabase
          .from('topic')
          .select('*')
          .or('topic_name.ilike.%$search%')
          .range(offset, offset + limit - 1);

      results = (data as List).map((json) => TopicRow.fromJson(json)).toList();
    } else {
      final data = await supabase
          .from('topic')
          .select('*')
          .range(offset, offset + limit - 1);

      results = (data as List).map((json) => TopicRow.fromJson(json)).toList();
    }

    return results;
  }}
