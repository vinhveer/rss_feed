// Generated by row_row_row tool
// Auto-generated file. Do not modify.
import 'package:supabase_flutter/supabase_flutter.dart';
class RssRow {
  static const table = 'rss';

  static const field = (
    id: 'id',
    rssLink: 'rss_link',
    newspaperId: 'newspaper_id',
    topicId: 'topic_id',
  );

  final int id;
  final String? rssLink;
  final int? newspaperId;
  final int? topicId;

  const RssRow({
    required this.id,
    this.rssLink,
    this.newspaperId,
    this.topicId,
  });

  factory RssRow.fromJson(Map<String, dynamic> json) {
    return RssRow(
      id: (json[field.id] as num).toInt(),
      rssLink: json[field.rssLink],
      newspaperId: json[field.newspaperId] == null ? null : (json[field.newspaperId] as num?)?.toInt(),
      topicId: json[field.topicId] == null ? null : (json[field.topicId] as num?)?.toInt(),
    );
  }

  Map<String, dynamic> toJson() {
    return {
      field.id: id,
      field.rssLink: rssLink,
      field.newspaperId: newspaperId,
      field.topicId: topicId,
    };
  }

  RssRow copyWith({
    int? id,
    String? rssLink,
    int? newspaperId,
    int? topicId,
  }) {
    return RssRow(
      id: id ?? this.id,
      rssLink: rssLink ?? this.rssLink,
      newspaperId: newspaperId ?? this.newspaperId,
      topicId: topicId ?? this.topicId,
    );
  }

  /// Creates a new row in the database.
  /// 
  /// Only non-null fields will be included in the insert payload.
  /// Primary keys and auto-generated fields can be set manually or left null for database defaults.
  /// Returns the created row with any auto-generated values.
  /// 
  /// Requires [supabase_flutter] package to be installed and initialized.
  /// Fetches a single row from the database by its primary key.
  /// 
  /// Returns the row if found, or throws an error if not found.
  /// 
  /// Requires [supabase_flutter] package to be installed and initialized.
  static Future<RssRow> create({
    int? id,
    String? rssLink,
    int? newspaperId,
    int? topicId,
  }) async {
    // Build the insert payload with only non-null fields using collection if
    final Map<String, dynamic> insertPayload = {
      if (id != null) field.id: id,
      if (rssLink != null) field.rssLink: rssLink,
      if (newspaperId != null) field.newspaperId: newspaperId,
      if (topicId != null) field.topicId: topicId,
    };

    final response = await Supabase.instance.client
        .from(table)
        .insert(insertPayload)
        .select()
        .single();
    return RssRow.fromJson(response);
  }

  /// Fetches a single row from the database by its primary key.
  /// 
  /// Returns the row if found, or throws an error if not found.
  /// 
  /// Requires [supabase_flutter] package to be installed and initialized.
  static Future<RssRow> getFromId(int id) async {
    final response = await Supabase.instance.client
        .from(table)
        .select()
        .eq(field.id, id)
        .single();
    return RssRow.fromJson(response);
  }
}
