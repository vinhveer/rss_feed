// Generated by row_row_row tool
// Auto-generated file. Do not modify.
import 'package:supabase_flutter/supabase_flutter.dart';

class KeywordRow {
  static const table = 'keyword';

  static const field = (
    keywordId: 'keyword_id',
    keywordName: 'keyword_name',
    keywordMd5: 'keyword_md5',
  );

  final int keywordId;
  final String keywordName;
  final String keywordMd5;

  const KeywordRow({
    required this.keywordId,
    required this.keywordName,
    required this.keywordMd5,
  });

  factory KeywordRow.fromJson(Map<String, dynamic> json) {
    return KeywordRow(
      keywordId: (json[field.keywordId] as num).toInt(),
      keywordName: json[field.keywordName] as String,
      keywordMd5: json[field.keywordMd5] as String,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      field.keywordId: keywordId,
      field.keywordName: keywordName,
      field.keywordMd5: keywordMd5,
    };
  }

  KeywordRow copyWith({
    int? keywordId,
    String? keywordName,
    String? keywordMd5,
  }) {
    return KeywordRow(
      keywordId: keywordId ?? this.keywordId,
      keywordName: keywordName ?? this.keywordName,
      keywordMd5: keywordMd5 ?? this.keywordMd5,
    );
  }

  /// Creates a new row in the database.
  ///
  /// Only non-null fields will be included in the insert payload.
  /// Primary keys and auto-generated fields can be set manually or left null for database defaults.
  /// Returns the created row with any auto-generated values.
  ///
  /// Requires [supabase_flutter] package to be installed and initialized.
  /// Fetches a single row from the database by its primary key.
  ///
  /// Returns the row if found, or throws an error if not found.
  ///
  /// Requires [supabase_flutter] package to be installed and initialized.
  static Future<KeywordRow> create({
    int? keywordId,
    String? keywordName,
    String? keywordMd5,
  }) async {
    // Build the insert payload with only non-null fields using collection if
    final Map<String, dynamic> insertPayload = {
      if (keywordId != null) field.keywordId: keywordId,
      if (keywordName != null) field.keywordName: keywordName,
      if (keywordMd5 != null) field.keywordMd5: keywordMd5,
    };

    final response =
        await Supabase.instance.client
            .from(table)
            .insert(insertPayload)
            .select()
            .single();
    return KeywordRow.fromJson(response);
  }

  /// Fetches a single row from the database by its primary key.
  ///
  /// Returns the row if found, or throws an error if not found.
  ///
  /// Requires [supabase_flutter] package to be installed and initialized.
  static Future<KeywordRow> getFromKeywordId(int keywordId) async {
    final response =
        await Supabase.instance.client
            .from(table)
            .select()
            .eq(field.keywordId, keywordId)
            .single();
    return KeywordRow.fromJson(response);
  }
}
